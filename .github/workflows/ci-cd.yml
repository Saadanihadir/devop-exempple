name: CI/CD Pipeline

# Déclenchement des workflows
on:
  push:
    branches:
      - main  # S'exécute lorsqu'un commit est poussé sur la branche main
  pull_request:
    branches:
      - main  # S'exécute lorsqu'une pull request cible la branche main

jobs:
  # Étape 1 : Build
  build:
    runs-on: ubuntu-latest
    steps:
      # Étape pour récupérer le code
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape pour configurer Docker
      - name: Setup Docker
        uses: docker/setup-buildx-action@v2

      # Étape pour construire l'image Docker
      - name: Build Docker image
        run: docker build -t my-app -f Dockerfile .


  # Étape 2 : Test
  test:
    runs-on: ubuntu-latest
    needs: build  # Exécute cette étape après le build
    steps:
      # Étape pour récupérer le code
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape pour configurer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14  # Version de Node.js utilisée

      # Étape pour installer les dépendances
      - name: Install dependencies
        run: npm install

      # Étape pour exécuter les tests
      - name: Run tests
        run: npm test

  # Étape 3 : Deploy
  deploy:
    runs-on: ubuntu-latest
    needs: test  # Exécute cette étape après les tests
    steps:
      # Étape pour simuler un déploiement
      - name: Deploy placeholder
        run: echo "Déploiement terminé avec succès !"

